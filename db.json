{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/gif1.gif","path":"img/gif1.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img1.jpg","path":"img/img1.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img2.jpg","path":"img/img2.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img3.jpg","path":"img/img3.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img4.jpg","path":"img/img4.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img5.jpg","path":"img/img5.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img6.jpg","path":"img/img6.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img7.jpg","path":"img/img7.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img8.jpg","path":"img/img8.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img9.jpg","path":"img/img9.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/tags/index.md","hash":"5a9ab58847395d8d0b3db78740ad62b5dcefa027","modified":1639127504220},{"_id":"source/categories/index.md","hash":"5f6342bb0af836f913010b6d0efb522522dbf051","modified":1639127599503},{"_id":"source/_posts/test.md","hash":"61366fa45812420c64559d8cfed9cc0619d9d713","modified":1639126499979},{"_id":"source/_posts/hello-world.md","hash":"4aa08ea84cab546f38fae8d39dbe9761afb84d17","modified":1639120805835},{"_id":"themes/butterfly/LICENSE","hash":"1128f8f91104ba9ef98d37eea6523a888dcfa5de","modified":1637769811000},{"_id":"themes/butterfly/package.json","hash":"5b2e9f99b09d9dc68d34fe6a37b4943df2bbc547","modified":1637769811000},{"_id":"themes/butterfly/README_CN.md","hash":"49ace5208f98783344f17a00adab7641cda43280","modified":1637769811000},{"_id":"themes/butterfly/.github/stale.yml","hash":"05a55a87fa7f122c59683e41c8b2e37e79f688f0","modified":1637769811000},{"_id":"themes/butterfly/README.md","hash":"6ee27baf95a5741abbc224ef8938d679b6597665","modified":1637769811000},{"_id":"themes/butterfly/languages/en.yml","hash":"7fe7528ed2778fe39444df2bc7e64f09e1302e97","modified":1637769811000},{"_id":"themes/butterfly/_config.yml","hash":"c3233ac42194be3efb9815a1bc72dad98b060c46","modified":1639125855175},{"_id":"themes/butterfly/languages/default.yml","hash":"1177f2177945c3e2447c6c0208e6ffdf0c0b186c","modified":1637769811000},{"_id":"themes/butterfly/layout/category.pug","hash":"710708cfdb436bc875602abf096c919ccdf544db","modified":1637769811000},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"38b32ab2aa3e2ebb9ef3c993c8dca42f1e000cd5","modified":1637769811000},{"_id":"themes/butterfly/layout/index.pug","hash":"e1c3146834c16e6077406180858add0a8183875a","modified":1637769811000},{"_id":"themes/butterfly/layout/archive.pug","hash":"bd62286afb64a51c97e800c5945620d51605d5fa","modified":1637769811000},{"_id":"themes/butterfly/layout/page.pug","hash":"baf469784aef227e4cc840550888554588e87a13","modified":1637769811000},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"b1ba98565fe2d28e956225cf9e8a21f329ee060e","modified":1637769811000},{"_id":"themes/butterfly/layout/tag.pug","hash":"0440f42569df2676273c026a92384fa7729bc4e9","modified":1637769811000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/custom.md","hash":"eff495eb1584cf4586e33c76e8b2fa6a469a179b","modified":1637769811000},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"05857c2f265246d8de00e31037f2720709540c09","modified":1637769811000},{"_id":"themes/butterfly/scripts/events/404.js","hash":"83cd7f73225ccad123afbd526ce1834eb1eb6a6d","modified":1637769811000},{"_id":"themes/butterfly/scripts/events/config.js","hash":"00fa19f0ccaac183a2133244641fdd152ade6316","modified":1637769811000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1637769811000},{"_id":"themes/butterfly/scripts/events/init.js","hash":"a7f567b3d3110afe2f99c967b8e15351a7f5bd6d","modified":1637769811000},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"d575137c8779e50422c2416f4d0832fdea346ee6","modified":1637769811000},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"932df912976261929f809b7dbd4eb473e7787345","modified":1637769811000},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"9821872007cf57efae4b728dc575ef9d004547bb","modified":1637769811000},{"_id":"themes/butterfly/layout/post.pug","hash":"8d398c8925182699d9f2b9f1b727f06228488312","modified":1637769811000},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"9819f0996234fbd80d6c50a9e526c56ebf22588d","modified":1637769811000},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"e00efdb5d02bc5c6eb4159e498af69fa61a7dbb9","modified":1637769811000},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.md","hash":"476802922b774b679225102ac30a9d9183394701","modified":1637769811000},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"2ec66513d5322f185d2071acc052978ba9415a8e","modified":1637769811000},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"6a103a2472903289bdecd5240eb89cac0b9e13d9","modified":1637769811000},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c6611d97087c51845cb1ab4821696a62fa33daeb","modified":1637769811000},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"21556f9cb412ddc500ad12ecfd419f3ea6c9f663","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"f79c99f6c5b626c272dc2bed2b0250d6b91bb28a","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"b816ded1451f28c7c54151ffe6c259b110253ae3","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"f33858ffb9e88191e644796e11d2f901eb332308","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"a43ee2c7871bdd93cb6beb804429e404570f7929","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"03b2afef41d02bd1045c89578a02402c28356006","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"c16c6eb058af2b36bcd583b2591076c7ebdd51ad","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"531808a290b8bdd66bac2faab211ada8e9646a37","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"6c6e415623d0fd39da016d9e353bb4f5cca444f5","modified":1637769811000},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"a2484895d10b36b5da4d34b19e35dbfcf8138be5","modified":1637769811000},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1637769811000},{"_id":"themes/butterfly/source/js/main.js","hash":"5c72f1929f9885251d0f2e6ebda058b0b8d782b7","modified":1637769811000},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1637769811000},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1637769811000},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1637769811000},{"_id":"themes/butterfly/source/js/utils.js","hash":"3ee4bd9071dc6e854ffa33964f3a8da2ee2a8409","modified":1637769811000},{"_id":"themes/butterfly/source/img/img5.jpg","hash":"19a1ebb8c6ebeccfbbd86a8cc3b0900771d057b7","modified":1639097478000},{"_id":"themes/butterfly/source/css/index.styl","hash":"861998e4ac67a59529a8245a9130d68f826c9c12","modified":1637769811000},{"_id":"themes/butterfly/source/css/var.styl","hash":"7e9123c64dd7f589db46ba9d7416c6537b8243ff","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"cb49f737aca272ccfeb62880bd651eccee72a129","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"02390a5b6ae1f57497b22ba2e6be9f13cfb7acac","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"ab3bdeb6e0acd3d58091698c1335afb069eea7e5","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"5945f6f7f963b3ed1cc50e7e7d2e4929e1c1440c","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f093ab771257a6a939b194f68607a2038c8d7da3","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"0b80f04950bd0fe5e6c4e7b7559adf4d0ce28436","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"428758c2459fd31efaf816c39693edb4f716b861","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"6f2608c4d93d3d10ae6b2cd7f8918f303f024321","modified":1637769811000},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1637769811000},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"72911c7b42e0174a979c09ead3f42ee24136feae","modified":1637769811000},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"d9bbe20a4029e542fee9f1e1013d28d767605ffc","modified":1637769811000},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"462511bcb6d4875417334377536c2b0d942ac8fa","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"facf3bec0afce3bc6d077cf1939818efc7fe3bf1","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"bcd384c8b2aa0390c9eb69ac1abbfd1240ce1da4","modified":1637769811000},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"a0e4f60e46a81f366b59d7040bc95fa5b2165f73","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"29f48f9370f245e6e575b5836bccf47eb5688d8b","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"2fe333a5fb7e2355826b2e5ac8ccb561bc894598","modified":1637769811000},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"f93f5c4aa121af8f5bb1ee7da6b69dd85f0b16fe","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"26be2afa9d4e7016cf3c42a6cd166f01e8e4ad5c","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"c61dccca690d486c3d9c29cf028d87b777385141","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"8fe1fc96e3123bec03a37a29479f2d4cbb2926bf","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"ef21990de28bd75dcd0f88b8d616e1a7a137502f","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"193a05ab27aa5ea0fbbe0066f841cbd540db6517","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"d53de408cb27a2e704aba7f7402b7caebe0410d8","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"9cee2b1dcfa4f0578ea917e0719aa59fcb158c76","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b13bda9d22b3b32b1f48e48521f6e39a154e5596","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"5bd55d1388b954d851ab2b84ea5938ed13f330f7","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"1bcbc80dff19cd53d0b367c3b9a3c751d3a1f10d","modified":1637769811000},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"66c8c94bdc62e00e1dd848582aa2612ae22c1066","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"6f4b4ede52305bce9b22c8c897dcbde8af6e2ce4","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"f01ee74948cedb44e53cd3bb1ef36b7d2778ede7","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"580feb7e8b0822a1be48ac380f8c5c53b1523321","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"50dbb9e6d98c71ffe16741b8c1b0c1b9771efd2b","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"5151aee16a39d522efb595f70494cdcc71fec154","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"91dfd28d7e5f2113e27c8ae854337d316ca1c48f","modified":1637769811000},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"826dae759062d8f84eb2bf5ab8fdb80e0f79d58b","modified":1637769811000},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"2c18a1c9604af475b4749def8f1959df88d8b276","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"d76c38adf1d9c1279ef4241835667789f5b736e0","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"df9d405c33a9a68946b530410f64096bcb72560c","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"a310e48f826a4cacc55d8e68f43806e5085554f6","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"db839912634f341d290f98e7cf5e1c42f03a4f7d","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"e8e1ef4640750a6328d7dcb28d5b1e038a280217","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"f741e85295ce15c70a6027ec15a542636dd5dcca","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"f28ceaf53cb6cdd2ed727c3a34301f22bb13ad6b","modified":1637769811000},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"656f9007d94cf29a20532705d94fb7f22827e6fe","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"f08d23dd704ba358a4d8a1dacd48be79fb4019c7","modified":1637769811000},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"0290605c4984882990059eefe3ad18d2ac6a19ef","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"78a3abd90bb3c18cd773d3d5abac3541e7f415e5","modified":1637769811000},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"e4c987c0202162b50dec91e1df74665d0fa933c9","modified":1637769811000},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"bf9568444dd54e39dc59b461323dcd38942f27d9","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"0d953e51d04a9294a64153c89c20f491a9ec42d4","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"6c41f49a3e682067533dd9384e6e4511fc3a1349","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"31346a210f4f9912c5b29f51d8f659913492f388","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"65fa23680af0daf64930a399c2f2ca37809a8149","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"dc3913c1a6dd207051c3d3414a33851ae8bc0a45","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"95a37e92b39c44bcbea4be7e29ddb3921c5b8220","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"f579212cc4e61eeae7523ad33fe4183f6d1ae1f5","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"15530d9ac59c576d79af75dd687efe71e8d261b0","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"65a23b5170204e55b813ce13a79d799b66b7382c","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"9e58c80af8bbd0c66ccb4f94d3781818cebf0d66","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"d16ad2ee0ff5751fd7f8a5ce1b83935518674977","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"3d492cfe645d37c94d30512e0b230b0a09913148","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"e2e8d681f183f00ce5ee239c42d2e36b3744daad","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"4cfcf0100e37ce91864703cd44f1cb99cb5493ea","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"5276937fbcceb9d62879dc47be880cd469a27349","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"5b404356f311d2ee36478291ca3553210867b738","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"12c65c174d26a41821df9bad26cdf1087ec5b0ca","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"2fb74d0b0e4b98749427c5a1a1b0acb6c85fadc4","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"b9ebb02af8ccf43e3f73be43db19254fa913c57b","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"88e3b611b03149665e4113cfa39595c1a3fca7e5","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"6311eda08e4515281c51bd49f43902a51832383c","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"292646dfab135973b09f0fa9e3931e83da2ed30e","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"d5fec7dedc52ab23865fb4db002755e9bdaadc9f","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"1fbecfd299068f90d727f0c8c65e2a792fa6e3e2","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"70f7edd6ac23af71a89bdfb624826ae107f6fbf2","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"60dc48a7b5d89c2a49123c3fc5893ab9c57dd225","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"3d8e3706a056389176f55dd21956aabc78046761","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"86897010fe71503e239887fd8f6a4f5851737be9","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"362e20e9d244b75eb3412597261c74dc6ad5b346","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"b63fd8ec48d782f51ee11226753fed1998bbf34a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"b9d54a01d7c2a7a183cb7209e99430ce7fea1fe3","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"13dc8ce922e2e2332fe6ad5856ebb5dbf9ea4444","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"d1a416d0a8a7916d0b1a41d73adc66f8c811e493","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"3057a2f6f051355e35d3b205121af8735100eacf","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"27afd2274bd5f2cbbf1bad9f0afe2b2b72c213ca","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"069e7c20ca3dfff2dd0db750867377dcff907f9a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"438aea3e713ed16b7559b9a80a9c5ec0221263df","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"ae67c6d4130a6c075058a9c1faea1648bcc6f83e","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"9c1229af6ab48961021886882c473514101fba21","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0612aaee878f33ea8d3da0293c7dc3b6cd871466","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"8c0726fb8d9a497d2f900b0be2845efaa68e3d87","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"f6b31b9fde818ad03f35fd70855444bd5d564142","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"5972c61f5125068cbe0af279a0c93a54847fdc3b","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"1fa64def79b4bfa3a6f3985d4e7acdff5b981617","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"18804c58239d95798fa86d0597f32d7f7dd30051","modified":1637769811000},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"8970cc1916c982b64a1478792b2822d1d31e276d","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"76634112c64023177260d1317ae39cef2a68e35f","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"481cd5053bafb1a19f623554a27d3aa077ea59c3","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"3f05f8311ae559d768ee3d0925e84ed767c314d3","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d85c3737b5c9548553a78b757a7698df126a52cf","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"7848ec58c6ec03243abf80a3b22b4dc10f3edf53","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"cfe63e7d26a6665df6aa32ca90868ad48e05ec04","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"d1d2474420bf4edc2e43ccdff6f92b8b082143df","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"24a926756c2300b9c561aaab6bd3a71fdd16e16d","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"e3bf847553515174f6085df982f0623e9783db7a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"bba9871f446c10ffcc8fa9023f5a2eb701a86bae","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"400ce038548d6f9ddb486150c724c87b6923a88b","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"ef1b2b5b980d6aeaa5d06b97d1afc9644b155a16","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"a111407fdcafcf1099e26ffa69786f8822c5d9fb","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"143236e395c18d80ab8dc794821eb337c85f6b32","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"6852d4fa5fff3fe52fdc41875a2c7af57f286b3a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"0764709381fa29778f6390d645ed137d2f91228f","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"9302837f1e35f153323bb4f166514c7e96e8ecdd","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"52ea8aa26b84d3ad38ae28cdf0f163e9ca8dced7","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"9c96e6e67931977268b218b99084b98597c2e42b","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"e4850f2c9ba5f6b2248808f7257662679e0fab0a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"c1c75abe5c899618ed6699c97ac999544840098a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"c271cacbac14ed665bbf47aa9c6e74e94c69dcef","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"b8ae5fd7d74e1edcef21f5004fc96147e064d219","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"59c22ebf3aaee90152e7cdb17ff5841c888fcd82","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"7648e4cb0b224f480b5f1356d64f62c9235f6723","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f9b00ead54573ba6e6eb33481588af144aab648d","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f6506ccfd1ce994b9e53aa95588d0b6dbad11411","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"a47d8f9f593091cc91192c0c49deaa2c0d2317fd","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"0a7587a0211011b5942edba2aa80d51169561d30","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"04b2a5882e789a988e41d45abe606f0617b08e38","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"c92df4f9d0611cf44c1a4491e226f242ec80f5bb","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"e846ddfe4a63b15d1416f6055f5756af5e3da7c6","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"da3b9437d061ee68dbc383057db5c73034c49605","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"8ce336a4c8cae81b58ee26ff51040ca650ff1519","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"70683b2281e60e6784f31016bcbcd2d2293eaec5","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"ac811c1d6e0bf08aeb933ade1b9557e0c560d0c9","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"309f51bc5302e72fc469d54c577fbcfe57fb07a8","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"2980f1889226ca981aa23b8eb1853fde26dcf89a","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"006acc91ce25fc7c7d778ca043e970f57dc46b83","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"0224012ba5aa2770c16ec95ad126d6fbe9c1aef5","modified":1637769811000},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4c4a9c15215ae8ac5eadb0e086b278f76db9ee92","modified":1637769811000},{"_id":"themes/butterfly/source/img/img1.jpg","hash":"55ce160c113e0ecc4054592da541466c76b9b098","modified":1639097478000},{"_id":"themes/butterfly/source/img/img2.jpg","hash":"5cf08aacdddf35103acea0b6707c850d46a82f0f","modified":1639097478000},{"_id":"themes/butterfly/source/img/img6.jpg","hash":"0560218f75867c9ca53c6e3cf38465dda3508a03","modified":1639097478000},{"_id":"themes/butterfly/source/img/img7.jpg","hash":"7a7516a10b29c43c6233e313fb7018b1fe187e42","modified":1639097478000},{"_id":"themes/butterfly/source/img/img3.jpg","hash":"c258eefa8aba87b89feb3d2f0cdd2944cedff0d1","modified":1639097478000},{"_id":"themes/butterfly/source/img/img4.jpg","hash":"f3bf5dad6412e1cc50a5c590dcbbcd37e8cb42f7","modified":1639097478000},{"_id":"themes/butterfly/source/img/img8.jpg","hash":"a214870d42a91ccff8182fb48363d5573797dc5e","modified":1639098656000},{"_id":"themes/butterfly/source/img/img9.jpg","hash":"c207aaddf47ea6848264010b18a426b97358ea96","modified":1639098656000},{"_id":"themes/butterfly/source/img/gif1.gif","hash":"e6606b98f7b989425f7a5899f7c7062448761b2c","modified":1639122877977},{"_id":"public/search.xml","hash":"cf5f334f0280bdd56873e87bbc504a7344594d10","modified":1639134482880},{"_id":"public/categories/index.html","hash":"f32f50211fb06bb6485bb237ce044f8065bf2569","modified":1639134482880},{"_id":"public/tags/index.html","hash":"acd5a3789031ad62e33962dc0389309a97773611","modified":1639134482880},{"_id":"public/2021/12/10/test/index.html","hash":"b19f9a8dd47faa6b9e2842d5889f326d9bec5dd2","modified":1639134392466},{"_id":"public/archives/index.html","hash":"02da6b8d8a265614c78cbfee227e65bde2e9e2c7","modified":1639134482880},{"_id":"public/archives/2021/index.html","hash":"55e168f4a60e701ff8d3ef4d44bc86e01d4f787d","modified":1639134482880},{"_id":"public/archives/2021/12/index.html","hash":"406c91c46e09bfda2eeef550a7f2e175f88744ff","modified":1639134482880},{"_id":"public/tags/123/index.html","hash":"6ad8ae156fbe790d3d03e75aa9684fe3409dda96","modified":1639134392466},{"_id":"public/2021/12/10/hello-world/index.html","hash":"3848e6eccdd1163920d8425b61fb553c014085e8","modified":1639134482880},{"_id":"public/index.html","hash":"2f81878a6c3670f9ee8725d5e2c933586583e751","modified":1639134482880},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1639134457451},{"_id":"public/img/img5.jpg","hash":"19a1ebb8c6ebeccfbbd86a8cc3b0900771d057b7","modified":1639134457451},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1639134457451},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1639134457451},{"_id":"public/img/img1.jpg","hash":"55ce160c113e0ecc4054592da541466c76b9b098","modified":1639134457451},{"_id":"public/img/img2.jpg","hash":"5cf08aacdddf35103acea0b6707c850d46a82f0f","modified":1639134457451},{"_id":"public/img/img6.jpg","hash":"0560218f75867c9ca53c6e3cf38465dda3508a03","modified":1639134457451},{"_id":"public/img/img7.jpg","hash":"7a7516a10b29c43c6233e313fb7018b1fe187e42","modified":1639134457451},{"_id":"public/js/utils.js","hash":"3ee4bd9071dc6e854ffa33964f3a8da2ee2a8409","modified":1639134457451},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1639134457451},{"_id":"public/js/search/algolia.js","hash":"aaa5e44125dcf321866bc2355a73773b11db8c9c","modified":1639134457451},{"_id":"public/js/search/local-search.js","hash":"72911c7b42e0174a979c09ead3f42ee24136feae","modified":1639134457451},{"_id":"public/js/main.js","hash":"5c72f1929f9885251d0f2e6ebda058b0b8d782b7","modified":1639134457451},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1639134457451},{"_id":"public/css/index.css","hash":"7cfdfdc0e252cbbdf517e35de7cf9f893b270c46","modified":1639134457451},{"_id":"public/img/img3.jpg","hash":"c258eefa8aba87b89feb3d2f0cdd2944cedff0d1","modified":1639134457451},{"_id":"public/img/img4.jpg","hash":"f3bf5dad6412e1cc50a5c590dcbbcd37e8cb42f7","modified":1639134457451},{"_id":"public/img/img8.jpg","hash":"a214870d42a91ccff8182fb48363d5573797dc5e","modified":1639134457451},{"_id":"public/img/img9.jpg","hash":"c207aaddf47ea6848264010b18a426b97358ea96","modified":1639134457451},{"_id":"public/img/gif1.gif","hash":"e6606b98f7b989425f7a5899f7c7062448761b2c","modified":1639134457451}],"Category":[],"Data":[],"Page":[{"title":"文章分类","date":"2017-05-27T05:47:40.000Z","type":"/img/img1.jpg","top_img":"/img/img9.jpg","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类 \ndate: 2017-05-27 13:47:40\ntype: \"/img/img1.jpg\"\ntop_img: \"/img/img9.jpg\"\n---","updated":"2021-12-10T09:13:19.503Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckx0a9dve00014wunebbh24hi","content":"","site":{"data":{}},"cover":"/img/img6.jpg","excerpt":"","more":""},{"title":"标签","date":"2017-05-27T05:47:40.000Z","type":"tags","top_img":"/img/img8.jpg","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-05-27 13:47:40\ntype: \"tags\"\ntop_img: \"/img/img8.jpg\"\n---","updated":"2021-12-10T09:11:44.220Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckx0a9dvg00024wunhqvhbour","content":"","site":{"data":{}},"cover":"/img/img2.jpg","excerpt":"","more":""}],"Post":[{"title":"sfgdfgdfgs","date":"2021-12-10T03:21:23.000Z","_content":"## 定义\n闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。\n\n**Tip:** 闭包变量是存在堆上的，就算是基本类型也是如此，如果存在栈上的话，函数执行完就被销毁\n\n#### 例子\n```\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function() {\n        console.log(new Date, i);\n    }, 1000);\n}\n\nconsole.log(new Date, i, 'main');\n\n```\n输出结果：\n```\n2017-03-18T00:43:45.873Z 5 main\n\n2017-03-18T00:43:46.866Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n\n```\n\n#### 如何输出 5 -> 0,1,2,3,4\n\n##### 1. 闭包\nIIFE（声明即执行的函数表达式）\n```\nfor (var i = 0; i < 5; i++) {\n    (function(j) {  // j = i\n        setTimeout(function() {\n            console.log(new Date, j);\n        }, 1000);\n    })(i);\n}\n\nconsole.log(new Date, i);\n\n```\n或setTimeout的参数设置\n```for (var i = 0; i < 5; i++) {\n    setTimeout(function(j) {\n        console.log(new Date, j);\n    }, 1000, i); \n}\n\nconsole.log(new Date, i);\n\n```\n\n## 追问  \n期望代码的输出变成 0 -> 1 -> 2 -> 3 -> 4 -> 5，并且要求原有的代码块中的循环和两处 console.log 不变。   \n代码执行时，立即输出 0，之后每隔 1 秒依次输出 1,2,3,4，循环结束后在大概第 5 秒的时候输出 5  \nvar i 不变\n\n#### 粗暴版\n```\nfor (var i = 0; i < 5; i++) {\n    (function(j) {\n        setTimeout(function() {\n            console.log(new Date, j);\n        }, 1000 * j);  // 这里修改 0~4 的定时器时间\n    })(i);\n}\n\nsetTimeout(function() { // 这里增加定时器，超时设置为 5 秒\n    console.log(new Date, i);\n}, 1000 * i);\n\n```\n#### 正常版\n```\nconst tasks = [];\nfor (var i = 0; i < 5; i++) {   // 这里 i 的声明不能改成 let，如果要改该怎么做？\n    ((j) => {\n        tasks.push(new Promise((resolve) => {\n            setTimeout(() => {\n                console.log(new Date, j);\n                resolve();  // 这里一定要 resolve，否则代码不会按预期 work\n            }, 1000 * j);   // 定时器的超时时间逐步增加\n        }));\n    })(i);\n}\n\nPromise.all(tasks).then(() => {\n    setTimeout(() => {\n        console.log(new Date, i);\n    }, 1000);   // 注意这里只需要把超时设置为 1 秒\n});\n\n```\n\n#### 优雅版\n```\nconst tasks = []; // 这里存放异步操作的 Promise\nconst output = (i) => new Promise((resolve) => {\n    setTimeout(() => {\n        console.log(new Date, i);\n        resolve();\n    }, 1000 * i);\n});\n\n// 生成全部的异步操作\nfor (var i = 0; i < 5; i++) {\n    tasks.push(output(i));\n}\n\n// 异步操作完成之后，输出最后的 i\nPromise.all(tasks).then(() => {\n    setTimeout(() => {\n        console.log(new Date, i);\n    }, 1000);\n});\n\n```\n\n#### ES7\n```\n// 模拟其他语言中的 sleep，实际上可以是任何异步操作\nconst sleep = (timeountMS) => new Promise((resolve) => {\n    setTimeout(resolve, timeountMS);\n});\n\n(async () => {  // 声明即执行的 async 函数表达式\n    for (var i = 0; i < 5; i++) {\n        if (i > 0) {\n            await sleep(1000);\n        }\n        console.log(new Date, i);\n    }\n\n    await sleep(1000);\n    console.log(new Date, i);\n})();\n\n```","source":"_posts/hello-world.md","raw":"---\ntitle: sfgdfgdfgs\ndate: 2021-12-10 11:21:23\n---\n## 定义\n闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。\n\n**Tip:** 闭包变量是存在堆上的，就算是基本类型也是如此，如果存在栈上的话，函数执行完就被销毁\n\n#### 例子\n```\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function() {\n        console.log(new Date, i);\n    }, 1000);\n}\n\nconsole.log(new Date, i, 'main');\n\n```\n输出结果：\n```\n2017-03-18T00:43:45.873Z 5 main\n\n2017-03-18T00:43:46.866Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n2017-03-18T00:43:46.868Z 5\n\n```\n\n#### 如何输出 5 -> 0,1,2,3,4\n\n##### 1. 闭包\nIIFE（声明即执行的函数表达式）\n```\nfor (var i = 0; i < 5; i++) {\n    (function(j) {  // j = i\n        setTimeout(function() {\n            console.log(new Date, j);\n        }, 1000);\n    })(i);\n}\n\nconsole.log(new Date, i);\n\n```\n或setTimeout的参数设置\n```for (var i = 0; i < 5; i++) {\n    setTimeout(function(j) {\n        console.log(new Date, j);\n    }, 1000, i); \n}\n\nconsole.log(new Date, i);\n\n```\n\n## 追问  \n期望代码的输出变成 0 -> 1 -> 2 -> 3 -> 4 -> 5，并且要求原有的代码块中的循环和两处 console.log 不变。   \n代码执行时，立即输出 0，之后每隔 1 秒依次输出 1,2,3,4，循环结束后在大概第 5 秒的时候输出 5  \nvar i 不变\n\n#### 粗暴版\n```\nfor (var i = 0; i < 5; i++) {\n    (function(j) {\n        setTimeout(function() {\n            console.log(new Date, j);\n        }, 1000 * j);  // 这里修改 0~4 的定时器时间\n    })(i);\n}\n\nsetTimeout(function() { // 这里增加定时器，超时设置为 5 秒\n    console.log(new Date, i);\n}, 1000 * i);\n\n```\n#### 正常版\n```\nconst tasks = [];\nfor (var i = 0; i < 5; i++) {   // 这里 i 的声明不能改成 let，如果要改该怎么做？\n    ((j) => {\n        tasks.push(new Promise((resolve) => {\n            setTimeout(() => {\n                console.log(new Date, j);\n                resolve();  // 这里一定要 resolve，否则代码不会按预期 work\n            }, 1000 * j);   // 定时器的超时时间逐步增加\n        }));\n    })(i);\n}\n\nPromise.all(tasks).then(() => {\n    setTimeout(() => {\n        console.log(new Date, i);\n    }, 1000);   // 注意这里只需要把超时设置为 1 秒\n});\n\n```\n\n#### 优雅版\n```\nconst tasks = []; // 这里存放异步操作的 Promise\nconst output = (i) => new Promise((resolve) => {\n    setTimeout(() => {\n        console.log(new Date, i);\n        resolve();\n    }, 1000 * i);\n});\n\n// 生成全部的异步操作\nfor (var i = 0; i < 5; i++) {\n    tasks.push(output(i));\n}\n\n// 异步操作完成之后，输出最后的 i\nPromise.all(tasks).then(() => {\n    setTimeout(() => {\n        console.log(new Date, i);\n    }, 1000);\n});\n\n```\n\n#### ES7\n```\n// 模拟其他语言中的 sleep，实际上可以是任何异步操作\nconst sleep = (timeountMS) => new Promise((resolve) => {\n    setTimeout(resolve, timeountMS);\n});\n\n(async () => {  // 声明即执行的 async 函数表达式\n    for (var i = 0; i < 5; i++) {\n        if (i > 0) {\n            await sleep(1000);\n        }\n        console.log(new Date, i);\n    }\n\n    await sleep(1000);\n    console.log(new Date, i);\n})();\n\n```","slug":"hello-world","published":1,"updated":"2021-12-10T07:20:05.835Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckx0aclwy0000hwun5uez3ifo","content":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。</p>\n<p><strong>Tip:</strong> 闭包变量是存在堆上的，就算是基本类型也是如此，如果存在栈上的话，函数执行完就被销毁</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    setTimeout(function() &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i, &#x27;main&#x27;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2017-03-18T00:43:45.873Z 5 main</span><br><span class=\"line\"></span><br><span class=\"line\">2017-03-18T00:43:46.866Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如何输出-5-gt-0-1-2-3-4\"><a href=\"#如何输出-5-gt-0-1-2-3-4\" class=\"headerlink\" title=\"如何输出 5 -&gt; 0,1,2,3,4\"></a>如何输出 5 -&gt; 0,1,2,3,4</h4><h5 id=\"1-闭包\"><a href=\"#1-闭包\" class=\"headerlink\" title=\"1. 闭包\"></a>1. 闭包</h5><p>IIFE（声明即执行的函数表达式）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    (function(j) &#123;  // j = i</span><br><span class=\"line\">        setTimeout(function() &#123;</span><br><span class=\"line\">            console.log(new Date, j);</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>或setTimeout的参数设置</p>\n<figure class=\"highlight plaintext\"><figcaption><span>(var i </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    setTimeout(function(j) &#123;</span><br><span class=\"line\">        console.log(new Date, j);</span><br><span class=\"line\">    &#125;, 1000, i); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"追问\"><a href=\"#追问\" class=\"headerlink\" title=\"追问\"></a>追问</h2><p>期望代码的输出变成 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5，并且要求原有的代码块中的循环和两处 console.log 不变。<br>代码执行时，立即输出 0，之后每隔 1 秒依次输出 1,2,3,4，循环结束后在大概第 5 秒的时候输出 5<br>var i 不变</p>\n<h4 id=\"粗暴版\"><a href=\"#粗暴版\" class=\"headerlink\" title=\"粗暴版\"></a>粗暴版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    (function(j) &#123;</span><br><span class=\"line\">        setTimeout(function() &#123;</span><br><span class=\"line\">            console.log(new Date, j);</span><br><span class=\"line\">        &#125;, 1000 * j);  // 这里修改 0~4 的定时器时间</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(function() &#123; // 这里增加定时器，超时设置为 5 秒</span><br><span class=\"line\">    console.log(new Date, i);</span><br><span class=\"line\">&#125;, 1000 * i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"正常版\"><a href=\"#正常版\" class=\"headerlink\" title=\"正常版\"></a>正常版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const tasks = [];</span><br><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;   // 这里 i 的声明不能改成 let，如果要改该怎么做？</span><br><span class=\"line\">    ((j) =&gt; &#123;</span><br><span class=\"line\">        tasks.push(new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">            setTimeout(() =&gt; &#123;</span><br><span class=\"line\">                console.log(new Date, j);</span><br><span class=\"line\">                resolve();  // 这里一定要 resolve，否则代码不会按预期 work</span><br><span class=\"line\">            &#125;, 1000 * j);   // 定时器的超时时间逐步增加</span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);   // 注意这里只需要把超时设置为 1 秒</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"优雅版\"><a href=\"#优雅版\" class=\"headerlink\" title=\"优雅版\"></a>优雅版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const tasks = []; // 这里存放异步操作的 Promise</span><br><span class=\"line\">const output = (i) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">        resolve();</span><br><span class=\"line\">    &#125;, 1000 * i);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 生成全部的异步操作</span><br><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    tasks.push(output(i));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 异步操作完成之后，输出最后的 i</span><br><span class=\"line\">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ES7\"><a href=\"#ES7\" class=\"headerlink\" title=\"ES7\"></a>ES7</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 模拟其他语言中的 sleep，实际上可以是任何异步操作</span><br><span class=\"line\">const sleep = (timeountMS) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">    setTimeout(resolve, timeountMS);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">(async () =&gt; &#123;  // 声明即执行的 async 函数表达式</span><br><span class=\"line\">    for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">        if (i &gt; 0) &#123;</span><br><span class=\"line\">            await sleep(1000);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    await sleep(1000);</span><br><span class=\"line\">    console.log(new Date, i);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","site":{"data":{}},"cover":"/img/img4.jpg","excerpt":"","more":"<h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>闭包是一个可以访问外部作用域的内部函数，即使这个外部作用域已经执行结束。</p>\n<p><strong>Tip:</strong> 闭包变量是存在堆上的，就算是基本类型也是如此，如果存在栈上的话，函数执行完就被销毁</p>\n<h4 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    setTimeout(function() &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i, &#x27;main&#x27;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>输出结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2017-03-18T00:43:45.873Z 5 main</span><br><span class=\"line\"></span><br><span class=\"line\">2017-03-18T00:43:46.866Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\">2017-03-18T00:43:46.868Z 5</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"如何输出-5-gt-0-1-2-3-4\"><a href=\"#如何输出-5-gt-0-1-2-3-4\" class=\"headerlink\" title=\"如何输出 5 -&gt; 0,1,2,3,4\"></a>如何输出 5 -&gt; 0,1,2,3,4</h4><h5 id=\"1-闭包\"><a href=\"#1-闭包\" class=\"headerlink\" title=\"1. 闭包\"></a>1. 闭包</h5><p>IIFE（声明即执行的函数表达式）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    (function(j) &#123;  // j = i</span><br><span class=\"line\">        setTimeout(function() &#123;</span><br><span class=\"line\">            console.log(new Date, j);</span><br><span class=\"line\">        &#125;, 1000);</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>或setTimeout的参数设置</p>\n<figure class=\"highlight plaintext\"><figcaption><span>(var i </span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    setTimeout(function(j) &#123;</span><br><span class=\"line\">        console.log(new Date, j);</span><br><span class=\"line\">    &#125;, 1000, i); </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">console.log(new Date, i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"追问\"><a href=\"#追问\" class=\"headerlink\" title=\"追问\"></a>追问</h2><p>期望代码的输出变成 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 5，并且要求原有的代码块中的循环和两处 console.log 不变。<br>代码执行时，立即输出 0，之后每隔 1 秒依次输出 1,2,3,4，循环结束后在大概第 5 秒的时候输出 5<br>var i 不变</p>\n<h4 id=\"粗暴版\"><a href=\"#粗暴版\" class=\"headerlink\" title=\"粗暴版\"></a>粗暴版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    (function(j) &#123;</span><br><span class=\"line\">        setTimeout(function() &#123;</span><br><span class=\"line\">            console.log(new Date, j);</span><br><span class=\"line\">        &#125;, 1000 * j);  // 这里修改 0~4 的定时器时间</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">setTimeout(function() &#123; // 这里增加定时器，超时设置为 5 秒</span><br><span class=\"line\">    console.log(new Date, i);</span><br><span class=\"line\">&#125;, 1000 * i);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"正常版\"><a href=\"#正常版\" class=\"headerlink\" title=\"正常版\"></a>正常版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const tasks = [];</span><br><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;   // 这里 i 的声明不能改成 let，如果要改该怎么做？</span><br><span class=\"line\">    ((j) =&gt; &#123;</span><br><span class=\"line\">        tasks.push(new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">            setTimeout(() =&gt; &#123;</span><br><span class=\"line\">                console.log(new Date, j);</span><br><span class=\"line\">                resolve();  // 这里一定要 resolve，否则代码不会按预期 work</span><br><span class=\"line\">            &#125;, 1000 * j);   // 定时器的超时时间逐步增加</span><br><span class=\"line\">        &#125;));</span><br><span class=\"line\">    &#125;)(i);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);   // 注意这里只需要把超时设置为 1 秒</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"优雅版\"><a href=\"#优雅版\" class=\"headerlink\" title=\"优雅版\"></a>优雅版</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const tasks = []; // 这里存放异步操作的 Promise</span><br><span class=\"line\">const output = (i) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">        resolve();</span><br><span class=\"line\">    &#125;, 1000 * i);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">// 生成全部的异步操作</span><br><span class=\"line\">for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">    tasks.push(output(i));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 异步操作完成之后，输出最后的 i</span><br><span class=\"line\">Promise.all(tasks).then(() =&gt; &#123;</span><br><span class=\"line\">    setTimeout(() =&gt; &#123;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;, 1000);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ES7\"><a href=\"#ES7\" class=\"headerlink\" title=\"ES7\"></a>ES7</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 模拟其他语言中的 sleep，实际上可以是任何异步操作</span><br><span class=\"line\">const sleep = (timeountMS) =&gt; new Promise((resolve) =&gt; &#123;</span><br><span class=\"line\">    setTimeout(resolve, timeountMS);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">(async () =&gt; &#123;  // 声明即执行的 async 函数表达式</span><br><span class=\"line\">    for (var i = 0; i &lt; 5; i++) &#123;</span><br><span class=\"line\">        if (i &gt; 0) &#123;</span><br><span class=\"line\">            await sleep(1000);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        console.log(new Date, i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    await sleep(1000);</span><br><span class=\"line\">    console.log(new Date, i);</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[{"name":"123","_id":"ckx0a9dvg00034wun1wfaejbm"}]}}